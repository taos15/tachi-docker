name: MultiArch Master CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - "**.md"
    tags:
      - v*
  
  repository_dispatch:
    types: [upstream-release]

  workflow_dispatch:
    inputs:
      suwayomi_release:
        description: 'Suwayomi Server Release Version'
        required: false
        default: 'latest'

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  SUWAYOMI_RELEASE: ${{ github.event.client_payload.suwayomi_release || github.event.inputs.suwayomi_release || github.ref_name || 'latest' }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest
            type=semver,pattern=${{ env.SUWAYOMI_RELEASE }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=semver,pattern=${{ env.SUWAYOMI_RELEASE }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SUWAYOMI_RELEASE }}
  create-release:
    runs-on: ubuntu-latest
    needs: merge
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SUWAYOMI_RELEASE }}
          release_name: Release ${{ env.SUWAYOMI_RELEASE }}
          body: |
            Release of  upstream ${{ env.IMAGE_NAME }}:${{ env.SUWAYOMI_RELEASE }}

            Docker images available at:
            - `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest`
            - `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SUWAYOMI_RELEASE }}`
            - Digest: `${{ steps.build.outputs.digest }}`

            Please pull the image using Docker CLI:
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SUWAYOMI_RELEASE }}
            ```
          draft: false
          prerelease: false
         
